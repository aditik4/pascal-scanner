#BlueJ class context
comment0.params=sca
comment0.target=ParserOld(scanner.Scanner)
comment0.text=\n\ Constructs\ a\ new\ parser\n\ @param\ sca\ the\ scanner\ that\ tokenizes\ input\n
comment1.params=exp
comment1.target=void\ eat(java.lang.String)
comment1.text=\n\ Eats\ the\ current\ token\ and\ sets\ current\ to\ the\ next\ one\n\ @param\ exp\ the\ expression\ to\ check\ and\ eat\n\ @throws\ ScanErrorException\ if\ current\ is\ not\ equal\ to\ num\n
comment2.params=
comment2.target=int\ parseNumber()
comment2.text=\n\ Parses\ a\ number\n\ @precondition\ current\ token\ in\ an\ integer\n\ @postcondition\ number\ token\ has\ been\ eaten\n\ @return\ the\ integer\ form\ of\ the\ token\n\ @throws\ ScanErrorException\ if\ current\ is\ invalid\n
comment3.params=
comment3.target=void\ parseStatement()
comment3.text=\n\ Parses\ a\ statement\n\ @precondition\ current\ points\ to\ a\ statement\n\ @postcondition\ all\ statements\ have\ been\ parsed,\ END\ is\ eaten\n\ @throws\ ScanErrorException\ if\ current\ is\ invalid\n
comment4.params=
comment4.target=void\ parseWhileBegin()
comment4.text=\n\ Handles\ statements\ within\ blocks\n\ @precondition\ current\ points\ to\ the\ statement\ after\ "BEGIN"\n\ @postcondition\ parsing\ ends,\ END\ is\ eaten\n\ @throws\ ScanErrorException\ if\ current\ is\ invalid\n
comment5.params=
comment5.target=int\ parseFactor()
comment5.text=\n\ Parses\ the\ factor\ \n\ @precondition\ current\ is\ a\ factor\n\ @return\ the\ parsed\ factor\n\ @throws\ ScanErrorException\ if\ current\ is\ invalid\n
comment6.params=
comment6.target=int\ parseTerm()
comment6.text=\n\ Parses\ the\ term\n\ @precondition\ current\ is\ a\ term\n\ @postcondition\ the\ term\ has\ been\ multiplied/divided\ as\ necessary\n\ @return\ the\ result\ \n\ @throws\ ScanErrorException\ if\ current\ is\ invalid\n
comment7.params=
comment7.target=int\ parseExpr()
comment7.text=\n\ Pareses\ the\ expression\n\ @precondition\ current\ is\ an\ expression\n\ @postcondition\ the\ expression\ has\ been\ done\ out\n\ @throws\ ScanErrorException\ if\ current\ is\ invalid\n
comment8.params=args
comment8.target=void\ main(java.lang.String[])
comment8.text=\n\ Runs\ the\ parser,\ parses\ a\ file\n\ @param\ args\ the\ arguments\ \n
numComments=9
